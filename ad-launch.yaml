apiVersion: v1
kind: Service
metadata:
  name: svc-ad-main
  labels:
    run: ad-main-producer
spec:
  ports:
    - port: 80
      targetPort: 28080
  selector:
    app: ad-main-server
---
apiVersion: v1
kind: Service
metadata:
  name: svc-ad-screen
  labels:
    run: ad-screen
spec:
  type: NodePort
  ports:
    - port: 8888
      targetPort: 8888
      nodePort: 30001
  selector:
    app: screen-server

---
apiVersion: v1
kind: Service
metadata:
  name: svc-screen-debug
spec:
  type: NodePort
  ports:
    - port: 6005
      targetPort: 5005
  selector:
    remote: java-screen
  sessionAffinity: ClientIP
---
apiVersion: v1
kind: Service
metadata:
  name: svc-ad-debug
spec:
  type: NodePort
  ports:
    - port: 5005
      targetPort: 5005
  selector:
    remote: java-ad
  sessionAffinity: ClientIP
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-ad-server
spec:
  rules:
    - host: server.zhaoo.icu
      http:
        paths:
          - path: /api
            backend:
              serviceName: svc-ad-main
              servicePort: 80
          - path: /callback
            backend:
              serviceName: svc-ad-main
              servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-ad-main-server
spec:
  selector:
    matchLabels:
      app: ad-main-server
  replicas: 1
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ad-main-server
        remote: java-ad
    spec:
      volumes:
        - name: dumps
          emptyDir: {}
      containers:
        - name: ad-main-server
          image: registry.cn-hangzhou.aliyuncs.com/wezhyn/ad-main:lastest
          command: ["java"]
          args:
            - "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
            - "-XX:+HeapDumpOnOutOfMemoryError"
            - "-XX:HeapDumpPath=/dumps/oom.bin"
            - "-XX:MaxRAMPercentage=80.0"
            - "-jar"
            - "ad-main.jar"
            - "--spring.profiles.avtive=tmp"
          imagePullPolicy: "Always"
          tty: true
          ports:
            - containerPort: 12345
            - name: web-http
              containerPort: 28080
            - containerPort: 5005
          env:
            - name: TZ
              value: Asia/Shanghai
          livenessProbe:
            httpGet:
              path: /api
              port: web-http
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 60
          resources:
            requests:
              cpu: 0.3
              memory: 200M
            limits:
              cpu: 1.5
              memory: 1024M
          volumeMounts:
            - name: dumps
              mountPath: /dumps

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-screen-server
spec:
  selector:
    matchLabels:
      app: screen-server
  replicas: 1
  minReadySeconds: 20
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: screen-server
        remote: java-screen
    spec:
      volumes:
        - name: dumps
          emptyDir: {}
      containers:
        - name: ad-screen-server
          image: registry.cn-hangzhou.aliyuncs.com/wezhyn/screen-server:lastest
          command: ["java"]
          args:
            - "-server"
            - "-XX:+UseParallelGC"
            - "-XX:+UseParallelOldGC"
            - "-XX:SurvivorRatio=6"
            - "-XX:MaxRAMPercentage=80.0"
            - "-XX:InitialRAMPercentage=80.0"
            - "-Xmn620M"
            - "-XX:MetaspaceSize=150M"
            - "-XX:+PrintGCDetails"
            - "-XX:+PrintGCDateStamps"
            - "-Xloggc:/dumps/gc.log"
            - "-XX:+HeapDumpOnOutOfMemoryError"
            - "-XX:HeapDumpPath=/dumps/oom.bin"
            - "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
            - "-jar"
            - "screen-server.jar"
            - "--spring.profiles.avtive=tmp"
            - "--logging.level.com.ad.screen.server.handler.HeartBeatMsgMsgHandler=debug"
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8888
              name: netty-port
            - containerPort: 5005
          resources:
            requests:
              cpu: 0.5
              memory: 200M
            limits:
              cpu: 1.5
              memory: 1200M
          env:
            - name: TZ
              value: Asia/Shanghai
          livenessProbe:
            tcpSocket:
              port: netty-port
            initialDelaySeconds: 30
            periodSeconds: 300
          volumeMounts:
            - name: dumps
              mountPath: /dumps

---
# frp 配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: frps-config
data:
  frps.ini: |
    [common]
    bind_addr = 0.0.0.0
    bind_port = 7000
    log_file = ./frps.log
    vhost_http_port = 8889

    token = wezhyn
    max_pool_count = 1000
    allow_ports = 7000-9000,30000-40000

    dashboard_addr = 0.0.0.0
    dashboard_port = 7500
    dashboard_user = admin
    dashboard_pwd = admin
    subdomain_host = zhaoo.icu
    tls_only = false

    protocol = tcp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-ad-frp
spec:
  selector:
    matchLabels:
      frp: screen
  replicas: 1
  minReadySeconds: 20
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        frp: screen
    spec:
      volumes:
        - name: frps
          configMap:
            name: frps-config
      containers:
        - name: ad-screen-frp
          image: snowdreamtech/frps
          ports:
            - name: bind
              containerPort: 7000
            - name: dashboard
              containerPort: 7500
            - name: screen
              containerPort: 30004
            - name: ad
              containerPort: 8889
          env:
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - name: frps
              mountPath: /etc/frp/frps.ini
              subPath: frps.ini


---

apiVersion: v1
kind: Service
metadata:
  name: frps-svc
spec:
  selector:
    frp: screen
  type: NodePort
  ports:
    - name: bind
      targetPort: bind
      protocol: TCP
      port: 7000
      nodePort: 30002
    - name: dashboard
      targetPort: dashboard
      protocol: TCP
      port: 7500
      nodePort: 30003
    - name: screen
      targetPort: screen
      protocol: TCP
      port: 30004
      nodePort: 30004
    - name: ad
      targetPort: ad
      protocol: TCP
      port: 8889
      nodePort: 30006